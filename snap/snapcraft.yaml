%YAML 1.2
---
# Snapcraft Recipe for Tidy
# ------------------------------
# This file is in the YAML data serialization format:
# http://yaml.org
# For the spec. of writing this file refer the following documentation:
# * The snapcraft syntax
#   https://docs.snapcraft.io/build-snaps/syntax
# * Snap Docs
#   https://snapdocs.labix.org
# * Latest doc topics in the Snapcraft Forum
#   https://forum.snapcraft.io/c/doc
# For support refer to the snapcraft section in the Snapcraft Forum:
# https://forum.snapcraft.io/c/snapcraft

name: tidy
summary: The granddaddy of HTML tools
description: |
  Tidy is a console application for Mac OS X, Linux, Windows, UNIX, and more. It corrects and cleans up HTML and XML documents by fixing markup errors and upgrading legacy code to modern standards.

  This is NOT an official snap, for any issues regarding using this snap please refer to the issue tracker:

  https://github.com/Lin-Buo-Ren/tidy-snap/issues

version: determined-by-version-script

version-script: |
  set \
    -o errexit \
    -o nounset

  upstream_version="$(
    git \
      -C parts/tidy/src \
      describe \
      --always \
      --dirty=-d \
      --tags \
    | sed s/^v//
  )"

  packaging_revision="$(
    git \
      describe \
      --abbrev=4 \
      --always \
      --match nothing \
      --dirty=-d
  )"

  printf -- '%s' "${upstream_version}+pkg-${packaging_revision}"

confinement: devmode
grade: devel
icon: snap/gui/icon.png

apps:
  tidy:
    command: tidy
    plugs:
    - home
    - removable-media

parts:
  # Launchers to fix the runtime environment to make the snap works
  #launchers:
    #source: snap/launchers
    #source-type: local
    #plugin: dump

    #override-build: |
      #set \
        #-o errexit \
        #-o nounset

      #mkdir \
        #--parents \
        #"${SNAPCRAFT_PART_INSTALL}"/bin
      #find \
        #. \
        #-type f \
        #-perm /111 \
        #-print0 \
        #| xargs \
          #--no-run-if-empty \
          #--null \
          #--verbose \
          #-I{} \
          #cp \
          #{} \
          #"${SNAPCRAFT_PART_INSTALL}"/bin

  # Patches to make the snap working if it can't be solved via launchers
  #patches:
    #source: snap/patches
    #source-type: local
    #plugin: dump

    #override-build: |
      #set \
        #-o errexit \
        #-o nounset

      #mkdir \
        #--parents \
        #"$SNAPCRAFT_PART_INSTALL"/patches
      #find \
        #. \
        #-type f \
        #-and \
        #-not \
        #-name README.md \
        #-print0 \
        #| xargs \
          #--no-run-if-empty \
          #--null \
          #--verbose \
          #-I{} \
          #cp \
          #{} \
          #"${SNAPCRAFT_PART_INSTALL}"/patches

    #stage:
    #- patches/*
    #override-prime: 'true'

  # Helper programs to aid in certain part of snap building, like a install program for a certain part
  #utilities:
    #source: snap/utilities
    #source-type: local
    #plugin: dump

    #override-build: |
      #set \
        #-o errexit \
        #-o nounset

      #mkdir \
        #--parents \
        #"$SNAPCRAFT_PART_INSTALL"/utilities
      #find \
        #. \
        #-type f \
        #-and \
        #-not \
        #-name README.md \
        #-print0 \
        #| xargs \
          #--no-run-if-empty \
          #--null \
          #--verbose \
          #-I{} \
          #cp \
          #{} \
          #"${SNAPCRAFT_PART_INSTALL}"/utilities
    #override-prime: 'true'

  tidy:
    #after:
    #- patches

    # Run `snapcraft help sources` for supported keywords on pulling
    # a part's source ingredients
    #source:
    #source-type:
    #source-tag:
    #source-depth:

    # Run `snapcraft plugins` for supported helper plugins
    # Run `snapcraft help plugins` for supported keywords on building
    # a part
    plugin: nil

    override-stage: |
      set \
        -o errexit \
        -o nounset

      snapcraftctl stage

      find \
        "${SNAPCRAFT_STAGE}"/share/applications \
        -name '*.desktop' \
        -print0 \
        | xargs \
          --no-run-if-empty \
          --null \
          --verbose \
          sed \
          --file "${SNAPCRAFT_STAGE}"/patches/patch-desktop-entries.sed \
          --in-place
